import os
from telegram import Update
from telegram.ext import Application, CommandHandler
from telegram.ext import Application, CommandHandler, MessageHandler, filters
from supabase import create_client, Client

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á–∏ –∏–∑ .env
@@ -16,22 +16,55 @@ async def start(update: Update, context):
        "username": user.username
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
    response = supabase.table("users").select("id").eq("telegram_id", user.id).execute()

    if len(response.data) == 0:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç ‚Äî —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º
        supabase.table("users").insert(user_data).execute()
        await update.message.reply_text("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        await update.message.reply_text("‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Totick!")
    else:
        await update.message.reply_text("üëã –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        await update.message.reply_text("üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!")

async def add_task(update: Update, context):
    user = update.effective_user
    task_text = " ".join(context.args)

    if not task_text:
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.")
        return

    task_data = {
        "telegram_id": user.id,
        "task": task_text,
        "status": "üî•"
    }

    supabase.table("tasks").insert(task_data).execute()
    await update.message.reply_text(f"‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {task_text}")

async def list_tasks(update: Update, context):
    user = update.effective_user
    response = supabase.table("tasks").select("task", "status").eq("telegram_id", user.id).execute()

    if len(response.data) == 0:
        await update.message.reply_text("‚ùó –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á.")
        return

    message = "üìã –í–∞—à–∏ –∑–∞–¥–∞—á–∏:\n"
    for task in response.data:
        message += f"{task['status']} {task['task']}\n"

    await update.message.reply_text(message)

async def help(update: Update, context):
    await update.message.reply_text("üìù –ö–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/help ‚Äî –ü–æ–º–æ—â—å")
    await update.message.reply_text(
        "üìù –ö–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n/task <—Ç–µ–∫—Å—Ç> ‚Äî –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n/tasks ‚Äî –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n/help ‚Äî –ü–æ–º–æ—â—å"
    )

def main():
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("task", add_task))
    app.add_handler(CommandHandler("tasks", list_tasks))
    app.add_handler(CommandHandler("help", help))

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
