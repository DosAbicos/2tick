import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from supabase import create_client

TOKEN = os.getenv("API_TOKEN")
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")

bot = Bot(token=TOKEN)
dp = Dispatcher()

supabase = create_client(SUPABASE_URL, SUPABASE_KEY)

main_keyboard = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É")],
    [KeyboardButton(text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–¥–∞—á")]
], resize_keyboard=True)

category_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üî• –°—Ä–æ—á–Ω—ã–µ", callback_data="urgent")],
    [InlineKeyboardButton(text="‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", callback_data="planned")],
    [InlineKeyboardButton(text="üîÅ –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ", callback_data="delegated")],
    [InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–µ–Ω–Ω—ã–µ", callback_data="deleted")]
])

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    telegram_id = message.from_user.id
    user = supabase.table("users").select("id").eq("telegram_id", telegram_id).execute()

    if len(user.data) == 0:
        supabase.table("users").insert({
            "telegram_id": telegram_id,
            "username": message.from_user.username
        }).execute()
        await message.answer("–¢—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! üî• –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∏", reply_markup=main_keyboard)
    else:
        await message.answer("–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º! –ß–µ–º –∑–∞–π–º–µ–º—Å—è —Å–µ–≥–æ–¥–Ω—è?", reply_markup=main_keyboard)

@dp.message()
async def add_task(message: types.Message):
    if message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É":
        await message.answer("–ù–∞–ø–∏—à–∏ —Ç–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏")
        return

    telegram_id = message.from_user.id
    user = supabase.table("users").select("id").eq("telegram_id", telegram_id).execute()

    if len(user.data) > 0:
        user_id = user.data[0]["id"]
        task_text = message.text
        await message.answer("–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–¥–∞—á–∏", reply_markup=category_keyboard)

        @dp.callback_query()
        async def choose_category(callback: types.CallbackQuery):
            category = callback.data
            supabase.table("tasks").insert({
                "user_id": user_id,
                "text": task_text,
                "category": category,
                "status": "new"
            }).execute()
            await callback.message.answer("–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ ‚úÖ")
            await callback.answer()
    else:
        await message.answer("–¢—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–∞–∂–º–∏ /start —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")

if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
